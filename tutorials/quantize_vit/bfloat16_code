/scratch/cpuhrsch/miniconda3/envs/nightly20240318py310/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/scratch/cpuhrsch/miniconda3/envs/nightly20240318py310/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ViT_B_16_Weights.IMAGENET1K_V1`. You can also use `weights=ViT_B_16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] Output code: 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from ctypes import c_void_p, c_long
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import torch
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import random
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import os
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import tempfile
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from math import inf, nan
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch import device, empty_strided
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codecache import AsyncCompile
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] aten = torch.ops.aten
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] async_compile = AsyncCompile()
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/cs/ccsbvhnswlt6qp4ryne5pqa7a645s3ferlbojhkec7horeiduko6.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => convert_element_type, var_mean
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_red_fused_add_cat_native_layer_norm_0 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.reduction(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[2048, 128],
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*fp32', 5: '*fp32', 6: '*fp32', 7: 'i32', 8: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 8), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_cat_native_layer_norm_0', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 1182
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 128
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 6)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x3 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rindex = roffset + rbase
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rmask = rindex < rnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         r2 = rindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp17 = tl.load(in_ptr3 + (r2 + (128*x3)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp0 = x1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp2 = tmp0 >= tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp3 = tl.full([1, 1], 1, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp4 = tmp0 < tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp5 = tl.load(in_ptr0 + (r2 + (128*x0)), rmask & tmp4 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp6 = tl.full(tmp5.shape, 0.0, tmp5.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp7 = tl.where(tmp4, tmp5, tmp6)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp8 = tmp0 >= tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp9 = tl.full([1, 1], 197, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp10 = tmp0 < tmp9
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp11 = tl.load(in_ptr1 + ((196*r2) + (25088*x0) + (((-1) + x1) % 196)), rmask & tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp12 = tl.load(in_ptr2 + (r2 + (128*x0)), rmask & tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp13 = tmp11 + tmp12
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp15 = tl.where(tmp8, tmp13, tmp14)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp16 = tl.where(tmp4, tmp7, tmp15)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp18 = tmp16 + tmp17
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp19 = tmp18.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp20 = tl.broadcast_to(tmp19, [XBLOCK, RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean_next, tmp21_m2_next, tmp21_weight_next = triton_helpers.welford_reduce(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             tmp20, tmp21_mean, tmp21_m2, tmp21_weight, roffset == 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean = tl.where(rmask & xmask, tmp21_mean_next, tmp21_mean)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_m2 = tl.where(rmask & xmask, tmp21_m2_next, tmp21_m2)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_weight = tl.where(rmask & xmask, tmp21_weight_next, tmp21_weight)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_tmp, tmp22_tmp, tmp23_tmp = triton_helpers.welford(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean, tmp21_m2, tmp21_weight, 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp21_tmp[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tmp22_tmp[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = tmp23_tmp[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp22, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp23, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import grid, split_scan_grid, start_graph, end_graph
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/gj/cgjqzvfih3nvjuzburtgf5iivvmq3xsveaesckqtgbu2mj2eltz7.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => convert_element_type, var_mean
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_cat_native_layer_norm_1 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 8],
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*fp32', 1: '*fp32', 2: '*fp32', 3: '*fp32', 4: '*fp32', 5: 'i32', 6: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_cat_native_layer_norm_1', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tl.where(rmask & xmask, tmp3, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.where(rmask & xmask, tmp4, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.where(rmask & xmask, tmp5, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/o3/co3b7wkosschewuiavh32xtp2ohwffs2q2dkryvo5nwtnzwqnlai.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => add_1, add_2, convert_element_type, convert_element_type_1, mul, mul_1, rsqrt, sub, var_mean
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused_add_cat_native_layer_norm_2 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*fp32', 5: '*fp32', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cat_native_layer_norm_2', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x2), xmask).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = x1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.full(tmp5.shape, 0.0, tmp5.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tmp0 >= tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.full([1], 197, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tmp0 < tmp9
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + ((196*x0) + (((-1) + x1) % 196)), tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (x0), tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp13, tmp14)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tl.where(tmp4, tmp7, tmp15)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp18.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp19 - tmp20
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = 768.0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp22 / tmp23
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = 1e-06
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = libdevice.rsqrt(tmp26)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tmp21 * tmp27
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tmp28 * tmp30
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp35, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/im/cimro67cis3wub6sql4tqwd5ne3w4pxcwqb23bibsh5ymbad4nr5.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_3 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_3', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/4h/c4hxmv7n26frodhsukhsuxy3wdguvl4i5hopcvtz5gg3aqk3seu6.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_4 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_4', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (768 + x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (768 + x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/jt/cjtlbfuwc7ujpm2yvrqhft6jxorezrp54jze24w4ss4vfkc7koaz.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_5 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_5', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1536 + x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (1536 + x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/4g/c4gtsunz4uw2ixo5iw4u7b65zegvziwxwzsq5x24kwzoeragk3fo.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_7, x_8, y], Original ATen: [aten.add, aten.cat, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_7 => clone_2
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_8 => add_3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # y => add_4, add_5, convert_element_type_8, convert_element_type_9, mul_2, mul_3, rsqrt_1, sub_1, var_mean_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_cat_clone_native_layer_norm_6 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: 'i32', 10: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 10), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_cat_clone_native_layer_norm_6', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr2, xnumel, rnumel):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp47 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp50 = tl.load(in_ptr6 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = x0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tmp3 >= tmp4
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.full([1], 1, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tmp3 < tmp6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (tl.broadcast_to(r1, [RBLOCK])), rmask & tmp7 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tmp3 >= tmp6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tl.full([1], 197, tl.int64)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp3 < tmp12
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + ((196*r1) + (((-1) + x0) % 196)), rmask & tmp11 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (tl.broadcast_to(r1, [RBLOCK])), rmask & tmp11 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tl.where(tmp11, tmp16, tmp17)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tl.where(tmp7, tmp10, tmp18)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tmp2 + tmp21
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tl.broadcast_to(tmp23, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tl.where(rmask & xmask, tmp24, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = tl.broadcast_to(tmp24, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = tl.where(rmask & xmask, tmp27, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = triton_helpers.promote_to_tensor(tl.sum(tmp29, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tl.full([1], 768, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tmp30 / tmp32
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp24 - tmp33
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp34 * tmp34
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp38 = tl.where(rmask & xmask, tmp36, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp39 = triton_helpers.promote_to_tensor(tl.sum(tmp38, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp40 = tmp23 - tmp33
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp41 = 768.0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp42 = tmp39 / tmp41
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp43 = 1e-06
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp44 = tmp42 + tmp43
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp45 = libdevice.rsqrt(tmp44)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp46 = tmp40 * tmp45
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp48 = tmp47.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp49 = tmp46 * tmp48
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp51 = tmp50.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp52 = tmp49 + tmp51
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp53 = tmp52.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + (768*x0)), tmp22, rmask & xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + (768*x0)), tmp53, rmask & xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/ki/ckigcnvoeoeb2cucrzmjdqvobchcdvuijlrhoalz5svbnwx6d3up.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_1 => add_6, convert_element_type_13, convert_element_type_14, erf, mul_4, mul_5, mul_6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused_gelu_7 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=4,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=8,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused_gelu_7', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(arg_A, arg_B, in_ptr2, out_ptr1):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.float32
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 64
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 128
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 32
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 3072
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (3072*idx_m)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr2 + (tl.broadcast_to(idx_n, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = acc + tmp0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = 0.5
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = 0.7071067811865476
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tmp2 * tmp5
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = libdevice.erf(tmp6)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = 1.0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tmp4 * tmp9
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(idx_n + (3072*idx_m), mask.shape)), tmp11, mask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import torch._inductor.kernel.mm_common
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] meta0 = {'GROUP_M': 8, 'EVEN_K': True, 'ALLOW_TF32': False, 'ACC_TYPE': 'tl.float32', 'B_PROLOGUE_CAST_TYPE': None, 'BLOCK_M': 64, 'BLOCK_N': 128, 'BLOCK_K': 32}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/nj/cnj2amp6tvri4ws4fe2zrilw5vcqa65s7yiju4v6lc2opkqejll4.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [add_2, x_9], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # add_2 => add_7
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_9 => add_8, add_9, convert_element_type_18, convert_element_type_19, mul_7, mul_8, rsqrt_2, sub_2, var_mean_2
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_native_layer_norm_8 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: 'i32', 7: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 7), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_layer_norm_8', 'mutated_arg_names': [], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr2, xnumel, rnumel):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.where(rmask & xmask, tmp6, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp6, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tl.where(rmask & xmask, tmp9, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = triton_helpers.promote_to_tensor(tl.sum(tmp11, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tl.full([1], 768, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tmp12 / tmp14
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tmp6 - tmp15
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.where(rmask & xmask, tmp18, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = triton_helpers.promote_to_tensor(tl.sum(tmp20, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tmp5 - tmp15
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = 768.0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp21 / tmp23
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = 1e-06
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = libdevice.rsqrt(tmp26)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tmp22 * tmp27
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tmp28 * tmp30
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + (768*x0)), tmp35, rmask & xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/qd/cqd6ndkhqtrgwpedw2ihrn74hcekwfi6gpspbant6llq7j4xx5z4.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [add_2, x_11, x_12, y_2], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # add_2 => add_7
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_11 => clone_6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_12 => add_10
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # y_2 => add_11, add_12, convert_element_type_26, convert_element_type_27, mul_10, mul_9, rsqrt_3, sub_3, var_mean_3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_clone_native_layer_norm_9 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: '*bf16', 8: 'i32', 9: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 9), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clone_native_layer_norm_9', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr2, xnumel, rnumel):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp36 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tmp3 + tmp6
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tmp2 + tmp7
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tl.where(rmask & xmask, tmp10, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tl.broadcast_to(tmp10, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tl.where(rmask & xmask, tmp13, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = triton_helpers.promote_to_tensor(tl.sum(tmp15, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.full([1], 768, tl.int32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp16 / tmp18
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tmp10 - tmp19
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp20 * tmp20
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tl.broadcast_to(tmp21, [RBLOCK])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tl.where(rmask & xmask, tmp22, 0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = triton_helpers.promote_to_tensor(tl.sum(tmp24, 0))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tmp9 - tmp19
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = 768.0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tmp25 / tmp27
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = 1e-06
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = libdevice.rsqrt(tmp30)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tmp26 * tmp31
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp33.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp32 * tmp34
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp37 = tmp36.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp38 = tmp35 + tmp37
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp39 = tmp38.to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + (768*x0)), tmp8, rmask & xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + (768*x0)), tmp39, rmask & xmask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/ew/cewzheb3dakpjjii6c3fdyxwojagugowubljksin22z4ljwqcvfc.py
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [x_55], Original ATen: [aten.addmm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_55 => addmm_48
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused_addmm_10 = async_compile.triton('triton_', '''
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=5,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=4,
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused_addmm_10', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, arg_A, arg_B, out_ptr0):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.float32
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 16
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 64
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 32
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 1000
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 768
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (1000*idx_m)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (tl.broadcast_to(idx_n, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = acc + tmp0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(idx_n, mask.shape)), tmp1, mask)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] meta1 = {'GROUP_M': 8, 'EVEN_K': True, 'ALLOW_TF32': False, 'ACC_TYPE': 'tl.float32', 'B_PROLOGUE_CAST_TYPE': None, 'BLOCK_M': 16, 'BLOCK_N': 64, 'BLOCK_K': 32}
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] async_compile.wait(globals())
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] del async_compile
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def call(args):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1 = args
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     args.clear()
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg0_1, (1, 1, 768), (768, 768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 197, 768), (151296, 768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg2_1, (768, 3, 16, 16), (768, 256, 16, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg3_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg4_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg5_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg6_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg7_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg8_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg9_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg10_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg11_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg12_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg13_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg14_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg15_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg16_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg17_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg18_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg19_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg20_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg21_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg22_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg23_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg24_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg25_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg26_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg27_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg28_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg29_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg30_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg31_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg32_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg33_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg34_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg35_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg36_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg37_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg38_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg39_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg40_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg41_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg42_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg43_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg44_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg45_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg46_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg47_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg48_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg49_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg50_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg51_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg52_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg53_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg54_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg55_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg56_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg57_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg58_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg59_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg60_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg61_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg62_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg63_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg64_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg65_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg66_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg67_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg68_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg69_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg70_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg71_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg72_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg73_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg74_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg75_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg76_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg77_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg78_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg79_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg80_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg81_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg82_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg83_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg84_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg85_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg86_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg87_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg88_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg89_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg90_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg91_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg92_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg93_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg94_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg95_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg96_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg97_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg98_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg99_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg100_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg101_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg102_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg103_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg104_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg105_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg106_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg107_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg108_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg109_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg110_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg111_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg112_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg113_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg114_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg115_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg116_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg117_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg118_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg119_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg120_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg121_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg122_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg123_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg124_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg125_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg126_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg127_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg128_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg129_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg130_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg131_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg132_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg133_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg134_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg135_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg136_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg137_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg138_1, (2304, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg139_1, (2304, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg140_1, (768, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg141_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg142_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg143_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg144_1, (3072, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg145_1, (3072, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg146_1, (768, 3072), (3072, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg147_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg148_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg149_1, (768, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg150_1, (1000, 768), (768, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg151_1, (1000, ), (1, ))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg152_1, (1, 3, 224, 224), (150528, 50176, 224, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         torch.cuda.set_device(0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x], Original ATen: [aten.convolution]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf0 = extern_kernels.convolution(arg152_1, arg2_1, stride=(16, 16), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         assert_size_stride(buf0, (1, 768, 14, 14), (150528, 196, 14, 1))
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg152_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg2_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused_add_cat_native_layer_norm_0.run(arg0_1, buf0, arg3_1, arg1_1, buf1, buf2, buf3, 1182, 128, grid=grid(1182), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 197, 1), (197, 1, 197), torch.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf5 = empty_strided_cuda((1, 197, 1), (197, 1, 197), torch.float32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_cat_native_layer_norm_1.run(buf1, buf2, buf3, buf4, buf5, 197, 6, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf2
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf3
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 197, 768), (151296, 768, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused_add_cat_native_layer_norm_2.run(arg0_1, buf0, arg3_1, arg1_1, buf4, buf5, arg4_1, arg5_1, buf8, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg4_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg5_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf4
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf5
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf9 = empty_strided_cuda((197, 2304), (2304, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (197, 768), (768, 1), 0), reinterpret_tensor(arg6_1, (768, 2304), (1, 768), 0), out=buf9)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg6_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf8, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf8  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf9, arg7_1, buf10, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf9, arg7_1, buf11, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf9, arg7_1, buf12, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg7_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf13 = aten._scaled_dot_product_flash_attention.default(buf10, buf11, buf12, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf14 = buf13[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf13
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf12, (197, 768), (768, 1), 0); del buf12  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (197, 768), (768, 1), 0), reinterpret_tensor(arg8_1, (768, 768), (1, 768), 0), out=buf19)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg8_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf20 = reinterpret_tensor(buf19, (1, 197, 768), (151296, 768, 1), 0); del buf19  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf24 = reinterpret_tensor(buf14, (1, 197, 768), (151296, 768, 1), 0); del buf14  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_7, x_8, y], Original ATen: [aten.add, aten.cat, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_cat_clone_native_layer_norm_6.run(buf20, arg9_1, arg0_1, buf0, arg3_1, arg1_1, arg10_1, arg11_1, buf24, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg0_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg10_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg11_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg1_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg3_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg9_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf0
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf26 = empty_strided_cuda((1, 197, 3072), (605184, 3072, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf24, arg12_1, arg13_1, buf26, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg12_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg13_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf27 = reinterpret_tensor(buf24, (197, 768), (768, 1), 0); del buf24  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf26, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg14_1, (3072, 768), (1, 3072), 0), out=buf27)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg14_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf31 = reinterpret_tensor(buf11, (1, 197, 768), (151296, 768, 1), 0); del buf11  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_2, x_9], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf20, buf27, arg15_1, arg16_1, arg17_1, buf31, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg16_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg17_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf32 = buf9; del buf9  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf31, (197, 768), (768, 1), 0), reinterpret_tensor(arg18_1, (768, 2304), (1, 768), 0), out=buf32)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg18_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf33 = reinterpret_tensor(buf31, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf31  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf32, arg19_1, buf33, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf34 = buf10; del buf10  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf32, arg19_1, buf34, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf35 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf32, arg19_1, buf35, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg19_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf36 = aten._scaled_dot_product_flash_attention.default(buf33, buf34, buf35, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf33
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf37 = buf36[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf36
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf42 = reinterpret_tensor(buf35, (197, 768), (768, 1), 0); del buf35  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf37, (197, 768), (768, 1), 0), reinterpret_tensor(arg20_1, (768, 768), (1, 768), 0), out=buf42)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg20_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf43 = reinterpret_tensor(buf42, (1, 197, 768), (151296, 768, 1), 0); del buf42  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf47 = reinterpret_tensor(buf37, (1, 197, 768), (151296, 768, 1), 0); del buf37  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_2, x_11, x_12, y_2], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf43, arg21_1, buf20, buf27, arg15_1, arg22_1, arg23_1, buf47, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg15_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg21_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg22_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg23_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf49 = buf26; del buf26  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf47, arg24_1, arg25_1, buf49, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg24_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg25_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf50 = reinterpret_tensor(buf47, (197, 768), (768, 1), 0); del buf47  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf49, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg26_1, (3072, 768), (1, 3072), 0), out=buf50)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg26_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf54 = reinterpret_tensor(buf27, (1, 197, 768), (151296, 768, 1), 0); del buf27  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_4, x_13], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf43, buf50, arg27_1, arg28_1, arg29_1, buf54, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg28_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg29_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf55 = buf32; del buf32  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf54, (197, 768), (768, 1), 0), reinterpret_tensor(arg30_1, (768, 2304), (1, 768), 0), out=buf55)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg30_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf56 = reinterpret_tensor(buf54, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf54  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf55, arg31_1, buf56, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf57 = reinterpret_tensor(buf20, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf20  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf55, arg31_1, buf57, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf58 = buf34; del buf34  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf55, arg31_1, buf58, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg31_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf59 = aten._scaled_dot_product_flash_attention.default(buf56, buf57, buf58, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf56
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf60 = buf59[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf59
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf65 = reinterpret_tensor(buf58, (197, 768), (768, 1), 0); del buf58  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf60, (197, 768), (768, 1), 0), reinterpret_tensor(arg32_1, (768, 768), (1, 768), 0), out=buf65)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg32_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf66 = reinterpret_tensor(buf65, (1, 197, 768), (151296, 768, 1), 0); del buf65  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf70 = reinterpret_tensor(buf60, (1, 197, 768), (151296, 768, 1), 0); del buf60  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_4, x_15, x_16, y_4], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf66, arg33_1, buf43, buf50, arg27_1, arg34_1, arg35_1, buf70, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg27_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg33_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg34_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg35_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf72 = buf49; del buf49  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf70, arg36_1, arg37_1, buf72, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg36_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg37_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf73 = reinterpret_tensor(buf70, (197, 768), (768, 1), 0); del buf70  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf72, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg38_1, (3072, 768), (1, 3072), 0), out=buf73)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg38_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf77 = reinterpret_tensor(buf50, (1, 197, 768), (151296, 768, 1), 0); del buf50  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_6, x_17], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf66, buf73, arg39_1, arg40_1, arg41_1, buf77, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg40_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg41_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf78 = buf55; del buf55  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf77, (197, 768), (768, 1), 0), reinterpret_tensor(arg42_1, (768, 2304), (1, 768), 0), out=buf78)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg42_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf79 = reinterpret_tensor(buf77, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf77  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf78, arg43_1, buf79, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf80 = reinterpret_tensor(buf43, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf43  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf78, arg43_1, buf80, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf81 = buf57; del buf57  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf78, arg43_1, buf81, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg43_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf82 = aten._scaled_dot_product_flash_attention.default(buf79, buf80, buf81, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf79
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf83 = buf82[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf82
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf88 = reinterpret_tensor(buf81, (197, 768), (768, 1), 0); del buf81  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf83, (197, 768), (768, 1), 0), reinterpret_tensor(arg44_1, (768, 768), (1, 768), 0), out=buf88)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg44_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf89 = reinterpret_tensor(buf88, (1, 197, 768), (151296, 768, 1), 0); del buf88  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf93 = reinterpret_tensor(buf83, (1, 197, 768), (151296, 768, 1), 0); del buf83  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_6, x_19, x_20, y_6], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf89, arg45_1, buf66, buf73, arg39_1, arg46_1, arg47_1, buf93, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg39_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg45_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg46_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg47_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf95 = buf72; del buf72  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf93, arg48_1, arg49_1, buf95, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg48_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg49_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf96 = reinterpret_tensor(buf93, (197, 768), (768, 1), 0); del buf93  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf95, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg50_1, (3072, 768), (1, 3072), 0), out=buf96)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg50_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf100 = reinterpret_tensor(buf73, (1, 197, 768), (151296, 768, 1), 0); del buf73  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_8, x_21], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf89, buf96, arg51_1, arg52_1, arg53_1, buf100, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg52_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg53_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf101 = buf78; del buf78  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf100, (197, 768), (768, 1), 0), reinterpret_tensor(arg54_1, (768, 2304), (1, 768), 0), out=buf101)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg54_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf102 = reinterpret_tensor(buf100, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf100  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf101, arg55_1, buf102, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf103 = reinterpret_tensor(buf66, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf66  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf101, arg55_1, buf103, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf104 = buf80; del buf80  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf101, arg55_1, buf104, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg55_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf105 = aten._scaled_dot_product_flash_attention.default(buf102, buf103, buf104, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf102
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf106 = buf105[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf105
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf111 = reinterpret_tensor(buf104, (197, 768), (768, 1), 0); del buf104  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf106, (197, 768), (768, 1), 0), reinterpret_tensor(arg56_1, (768, 768), (1, 768), 0), out=buf111)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg56_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf112 = reinterpret_tensor(buf111, (1, 197, 768), (151296, 768, 1), 0); del buf111  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf116 = reinterpret_tensor(buf106, (1, 197, 768), (151296, 768, 1), 0); del buf106  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_8, x_23, x_24, y_8], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf112, arg57_1, buf89, buf96, arg51_1, arg58_1, arg59_1, buf116, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg51_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg57_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg58_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg59_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf118 = buf95; del buf95  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf116, arg60_1, arg61_1, buf118, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg60_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg61_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf119 = reinterpret_tensor(buf116, (197, 768), (768, 1), 0); del buf116  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf118, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg62_1, (3072, 768), (1, 3072), 0), out=buf119)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg62_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf123 = reinterpret_tensor(buf96, (1, 197, 768), (151296, 768, 1), 0); del buf96  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_10, x_25], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf112, buf119, arg63_1, arg64_1, arg65_1, buf123, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg64_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg65_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf124 = buf101; del buf101  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf123, (197, 768), (768, 1), 0), reinterpret_tensor(arg66_1, (768, 2304), (1, 768), 0), out=buf124)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg66_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf125 = reinterpret_tensor(buf123, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf123  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf124, arg67_1, buf125, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf126 = reinterpret_tensor(buf89, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf89  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf124, arg67_1, buf126, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf127 = buf103; del buf103  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf124, arg67_1, buf127, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg67_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf128 = aten._scaled_dot_product_flash_attention.default(buf125, buf126, buf127, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf125
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf129 = buf128[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf128
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf134 = reinterpret_tensor(buf127, (197, 768), (768, 1), 0); del buf127  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf129, (197, 768), (768, 1), 0), reinterpret_tensor(arg68_1, (768, 768), (1, 768), 0), out=buf134)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg68_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf135 = reinterpret_tensor(buf134, (1, 197, 768), (151296, 768, 1), 0); del buf134  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf139 = reinterpret_tensor(buf129, (1, 197, 768), (151296, 768, 1), 0); del buf129  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_10, x_27, x_28, y_10], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf135, arg69_1, buf112, buf119, arg63_1, arg70_1, arg71_1, buf139, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg63_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg69_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg70_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg71_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf141 = buf118; del buf118  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf139, arg72_1, arg73_1, buf141, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg72_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg73_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf142 = reinterpret_tensor(buf139, (197, 768), (768, 1), 0); del buf139  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf141, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg74_1, (3072, 768), (1, 3072), 0), out=buf142)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg74_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf146 = reinterpret_tensor(buf119, (1, 197, 768), (151296, 768, 1), 0); del buf119  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_12, x_29], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf135, buf142, arg75_1, arg76_1, arg77_1, buf146, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg76_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg77_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf147 = buf124; del buf124  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf146, (197, 768), (768, 1), 0), reinterpret_tensor(arg78_1, (768, 2304), (1, 768), 0), out=buf147)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg78_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf148 = reinterpret_tensor(buf146, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf146  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf147, arg79_1, buf148, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf149 = reinterpret_tensor(buf112, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf112  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf147, arg79_1, buf149, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf150 = buf126; del buf126  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf147, arg79_1, buf150, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg79_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf151 = aten._scaled_dot_product_flash_attention.default(buf148, buf149, buf150, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf148
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf152 = buf151[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf151
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf157 = reinterpret_tensor(buf150, (197, 768), (768, 1), 0); del buf150  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf152, (197, 768), (768, 1), 0), reinterpret_tensor(arg80_1, (768, 768), (1, 768), 0), out=buf157)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg80_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf158 = reinterpret_tensor(buf157, (1, 197, 768), (151296, 768, 1), 0); del buf157  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf162 = reinterpret_tensor(buf152, (1, 197, 768), (151296, 768, 1), 0); del buf152  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_12, x_31, x_32, y_12], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf158, arg81_1, buf135, buf142, arg75_1, arg82_1, arg83_1, buf162, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg75_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg81_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg82_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg83_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf164 = buf141; del buf141  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf162, arg84_1, arg85_1, buf164, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg84_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg85_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf165 = reinterpret_tensor(buf162, (197, 768), (768, 1), 0); del buf162  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf164, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg86_1, (3072, 768), (1, 3072), 0), out=buf165)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg86_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf169 = reinterpret_tensor(buf142, (1, 197, 768), (151296, 768, 1), 0); del buf142  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_14, x_33], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf158, buf165, arg87_1, arg88_1, arg89_1, buf169, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg88_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg89_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf170 = buf147; del buf147  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf169, (197, 768), (768, 1), 0), reinterpret_tensor(arg90_1, (768, 2304), (1, 768), 0), out=buf170)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg90_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf171 = reinterpret_tensor(buf169, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf169  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf170, arg91_1, buf171, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf172 = reinterpret_tensor(buf135, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf135  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf170, arg91_1, buf172, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf173 = buf149; del buf149  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf170, arg91_1, buf173, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg91_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf174 = aten._scaled_dot_product_flash_attention.default(buf171, buf172, buf173, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf171
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf175 = buf174[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf174
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf180 = reinterpret_tensor(buf173, (197, 768), (768, 1), 0); del buf173  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf175, (197, 768), (768, 1), 0), reinterpret_tensor(arg92_1, (768, 768), (1, 768), 0), out=buf180)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg92_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf181 = reinterpret_tensor(buf180, (1, 197, 768), (151296, 768, 1), 0); del buf180  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf185 = reinterpret_tensor(buf175, (1, 197, 768), (151296, 768, 1), 0); del buf175  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_14, x_35, x_36, y_14], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf181, arg93_1, buf158, buf165, arg87_1, arg94_1, arg95_1, buf185, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg87_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg93_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg94_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg95_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf187 = buf164; del buf164  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf185, arg96_1, arg97_1, buf187, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg96_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg97_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf188 = reinterpret_tensor(buf185, (197, 768), (768, 1), 0); del buf185  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf187, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg98_1, (3072, 768), (1, 3072), 0), out=buf188)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg98_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf192 = reinterpret_tensor(buf165, (1, 197, 768), (151296, 768, 1), 0); del buf165  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_16, x_37], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf181, buf188, arg99_1, arg100_1, arg101_1, buf192, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg100_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg101_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf193 = buf170; del buf170  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf192, (197, 768), (768, 1), 0), reinterpret_tensor(arg102_1, (768, 2304), (1, 768), 0), out=buf193)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg102_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf194 = reinterpret_tensor(buf192, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf192  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf193, arg103_1, buf194, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf195 = reinterpret_tensor(buf158, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf158  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf193, arg103_1, buf195, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf196 = buf172; del buf172  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf193, arg103_1, buf196, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg103_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf197 = aten._scaled_dot_product_flash_attention.default(buf194, buf195, buf196, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf194
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf198 = buf197[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf197
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf203 = reinterpret_tensor(buf196, (197, 768), (768, 1), 0); del buf196  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf198, (197, 768), (768, 1), 0), reinterpret_tensor(arg104_1, (768, 768), (1, 768), 0), out=buf203)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg104_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf204 = reinterpret_tensor(buf203, (1, 197, 768), (151296, 768, 1), 0); del buf203  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf208 = reinterpret_tensor(buf198, (1, 197, 768), (151296, 768, 1), 0); del buf198  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_16, x_39, x_40, y_16], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf204, arg105_1, buf181, buf188, arg99_1, arg106_1, arg107_1, buf208, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg105_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg106_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg107_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg99_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf210 = buf187; del buf187  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf208, arg108_1, arg109_1, buf210, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg108_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg109_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf211 = reinterpret_tensor(buf208, (197, 768), (768, 1), 0); del buf208  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf210, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg110_1, (3072, 768), (1, 3072), 0), out=buf211)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg110_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf215 = reinterpret_tensor(buf188, (1, 197, 768), (151296, 768, 1), 0); del buf188  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_18, x_41], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf204, buf211, arg111_1, arg112_1, arg113_1, buf215, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg112_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg113_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf216 = buf193; del buf193  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf215, (197, 768), (768, 1), 0), reinterpret_tensor(arg114_1, (768, 2304), (1, 768), 0), out=buf216)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg114_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf217 = reinterpret_tensor(buf215, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf215  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf216, arg115_1, buf217, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf218 = reinterpret_tensor(buf181, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf181  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf216, arg115_1, buf218, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf219 = buf195; del buf195  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf216, arg115_1, buf219, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg115_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf220 = aten._scaled_dot_product_flash_attention.default(buf217, buf218, buf219, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf217
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf221 = buf220[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf220
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf226 = reinterpret_tensor(buf219, (197, 768), (768, 1), 0); del buf219  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf221, (197, 768), (768, 1), 0), reinterpret_tensor(arg116_1, (768, 768), (1, 768), 0), out=buf226)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg116_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf227 = reinterpret_tensor(buf226, (1, 197, 768), (151296, 768, 1), 0); del buf226  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf231 = reinterpret_tensor(buf221, (1, 197, 768), (151296, 768, 1), 0); del buf221  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_18, x_43, x_44, y_18], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf227, arg117_1, buf204, buf211, arg111_1, arg118_1, arg119_1, buf231, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg111_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg117_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg118_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg119_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf233 = buf210; del buf210  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf231, arg120_1, arg121_1, buf233, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg120_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg121_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf234 = reinterpret_tensor(buf231, (197, 768), (768, 1), 0); del buf231  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf233, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg122_1, (3072, 768), (1, 3072), 0), out=buf234)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg122_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf238 = reinterpret_tensor(buf211, (1, 197, 768), (151296, 768, 1), 0); del buf211  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_20, x_45], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf227, buf234, arg123_1, arg124_1, arg125_1, buf238, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg124_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg125_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf239 = buf216; del buf216  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf238, (197, 768), (768, 1), 0), reinterpret_tensor(arg126_1, (768, 2304), (1, 768), 0), out=buf239)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg126_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf240 = reinterpret_tensor(buf238, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf238  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf239, arg127_1, buf240, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf241 = reinterpret_tensor(buf204, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf204  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf239, arg127_1, buf241, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf242 = buf218; del buf218  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf239, arg127_1, buf242, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg127_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf243 = aten._scaled_dot_product_flash_attention.default(buf240, buf241, buf242, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf240
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf244 = buf243[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf243
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf249 = reinterpret_tensor(buf242, (197, 768), (768, 1), 0); del buf242  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf244, (197, 768), (768, 1), 0), reinterpret_tensor(arg128_1, (768, 768), (1, 768), 0), out=buf249)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg128_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf250 = reinterpret_tensor(buf249, (1, 197, 768), (151296, 768, 1), 0); del buf249  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf254 = reinterpret_tensor(buf244, (1, 197, 768), (151296, 768, 1), 0); del buf244  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_20, x_47, x_48, y_20], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf250, arg129_1, buf227, buf234, arg123_1, arg130_1, arg131_1, buf254, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg123_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg129_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg130_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg131_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf256 = buf233; del buf233  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf254, arg132_1, arg133_1, buf256, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg132_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg133_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf257 = reinterpret_tensor(buf254, (197, 768), (768, 1), 0); del buf254  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf256, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg134_1, (3072, 768), (1, 3072), 0), out=buf257)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg134_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf261 = reinterpret_tensor(buf234, (1, 197, 768), (151296, 768, 1), 0); del buf234  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_22, x_49], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf250, buf257, arg135_1, arg136_1, arg137_1, buf261, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg136_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg137_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf262 = buf239; del buf239  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf261, (197, 768), (768, 1), 0), reinterpret_tensor(arg138_1, (768, 2304), (1, 768), 0), out=buf262)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg138_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf263 = reinterpret_tensor(buf261, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf261  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf262, arg139_1, buf263, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf264 = reinterpret_tensor(buf227, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf227  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf262, arg139_1, buf264, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf265 = buf241; del buf241  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf262, arg139_1, buf265, 151296, grid=grid(151296), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg139_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf262
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf266 = aten._scaled_dot_product_flash_attention.default(buf263, buf264, buf265, scale=0.125)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf263
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf264
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf267 = buf266[0]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf266
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf272 = reinterpret_tensor(buf265, (197, 768), (768, 1), 0); del buf265  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf267, (197, 768), (768, 1), 0), reinterpret_tensor(arg140_1, (768, 768), (1, 768), 0), out=buf272)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg140_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf273 = reinterpret_tensor(buf272, (1, 197, 768), (151296, 768, 1), 0); del buf272  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf277 = reinterpret_tensor(buf267, (1, 197, 768), (151296, 768, 1), 0); del buf267  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_22, x_51, x_52, y_22], Original ATen: [aten.add, aten.clone, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_clone_native_layer_norm_9.run(buf273, arg141_1, buf250, buf257, arg135_1, arg142_1, arg143_1, buf277, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg135_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg141_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg142_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg143_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf250
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf279 = buf256; del buf256  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_mlp_1], Original ATen: [aten.gelu]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_gelu_7.run(buf277, arg144_1, arg145_1, buf279, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta0), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg144_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg145_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf280 = reinterpret_tensor(buf277, (197, 768), (768, 1), 0); del buf277  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf279, (197, 3072), (3072, 1), 0), reinterpret_tensor(arg146_1, (3072, 768), (1, 3072), 0), out=buf280)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg146_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf279
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf284 = reinterpret_tensor(buf257, (1, 197, 768), (151296, 768, 1), 0); del buf257  # reuse
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_24, x_53], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_8.run(buf273, buf280, arg147_1, arg148_1, arg149_1, buf284, 197, 768, grid=grid(197), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg147_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg148_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg149_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf273
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf280
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf285 = empty_strided_cuda((1, 1000), (1000, 1), torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x_55], Original ATen: [aten.addmm]
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_addmm_10.run(arg151_1, buf284, arg150_1, buf285, grid=torch._inductor.kernel.mm_common.mm_grid(1, 1000, meta1), stream=stream0)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg150_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg151_1
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf284
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     return (buf285, )
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg0_1 = rand_strided((1, 1, 768), (768, 768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg1_1 = rand_strided((1, 197, 768), (151296, 768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg2_1 = rand_strided((768, 3, 16, 16), (768, 256, 16, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg3_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg4_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg5_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg6_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg7_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg8_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg9_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg10_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg11_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg12_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg13_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg14_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg15_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg16_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg17_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg18_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg19_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg20_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg21_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg22_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg23_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg24_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg25_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg26_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg27_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg28_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg29_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg30_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg31_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg32_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg33_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg34_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg35_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg36_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg37_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg38_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg39_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg40_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg41_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg42_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg43_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg44_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg45_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg46_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg47_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg48_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg49_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg50_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg51_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg52_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg53_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg54_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg55_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg56_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg57_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg58_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg59_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg60_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg61_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg62_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg63_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg64_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg65_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg66_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg67_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg68_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg69_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg70_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg71_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg72_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg73_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg74_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg75_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg76_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg77_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg78_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg79_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg80_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg81_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg82_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg83_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg84_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg85_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg86_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg87_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg88_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg89_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg90_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg91_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg92_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg93_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg94_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg95_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg96_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg97_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg98_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg99_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg100_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg101_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg102_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg103_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg104_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg105_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg106_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg107_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg108_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg109_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg110_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg111_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg112_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg113_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg114_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg115_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg116_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg117_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg118_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg119_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg120_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg121_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg122_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg123_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg124_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg125_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg126_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg127_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg128_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg129_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg130_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg131_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg132_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg133_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg134_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg135_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg136_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg137_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg138_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg139_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg140_1 = rand_strided((768, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg141_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg142_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg143_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg144_1 = rand_strided((3072, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg145_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg146_1 = rand_strided((768, 3072), (3072, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg147_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg148_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg149_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg150_1 = rand_strided((1000, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg151_1 = rand_strided((1000, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg152_1 = rand_strided((1, 3, 224, 224), (150528, 50176, 224, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1])
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] if __name__ == "__main__":
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0318 20:03:58.153000 140622809134912 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
I0318 20:03:58.154000 140622809134912 torch/_inductor/graph.py:1273] [0/0] [__output_code] Output code written to: /tmp/torchinductor_cpuhrsch/mb/cmbsxqfa4qqu3rpi227mawjr4hqshyrmbiwjdd76nfbb5zrpxh7j.py
STAGE:2024-03-18 20:03:58 1967235:1967235 ActivityProfilerController.cpp:314] Completed Stage: Warm Up
STAGE:2024-03-18 20:03:58 1967235:1967235 ActivityProfilerController.cpp:320] Completed Stage: Collection
STAGE:2024-03-18 20:03:58 1967235:1967235 ActivityProfilerController.cpp:324] Completed Stage: Post Processing
