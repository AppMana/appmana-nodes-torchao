/scratch/cpuhrsch/miniconda3/envs/nightly20240318py310/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/scratch/cpuhrsch/miniconda3/envs/nightly20240318py310/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ViT_B_16_Weights.IMAGENET1K_V1`. You can also use `weights=ViT_B_16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] Output code: 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from ctypes import c_void_p, c_long
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import torch
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import random
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import os
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import tempfile
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from math import inf, nan
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch import device, empty_strided
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codecache import AsyncCompile
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] aten = torch.ops.aten
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] async_compile = AsyncCompile()
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/cs/ccsbvhnswlt6qp4ryne5pqa7a645s3ferlbojhkec7horeiduko6.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => convert_element_type, var_mean
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_red_fused_add_cat_native_layer_norm_0 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[2048, 128],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*fp32', 5: '*fp32', 6: '*fp32', 7: 'i32', 8: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 8), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_cat_native_layer_norm_0', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 1182
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 128
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 6)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 6
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x3 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rindex = roffset + rbase
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         r2 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp17 = tl.load(in_ptr3 + (r2 + (128*x3)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp0 = x1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp2 = tmp0 >= tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp3 = tl.full([1, 1], 1, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp4 = tmp0 < tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp5 = tl.load(in_ptr0 + (r2 + (128*x0)), rmask & tmp4 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp6 = tl.full(tmp5.shape, 0.0, tmp5.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp7 = tl.where(tmp4, tmp5, tmp6)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp8 = tmp0 >= tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp9 = tl.full([1, 1], 197, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp10 = tmp0 < tmp9
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp11 = tl.load(in_ptr1 + ((196*r2) + (25088*x0) + (((-1) + x1) % 196)), rmask & tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp12 = tl.load(in_ptr2 + (r2 + (128*x0)), rmask & tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp13 = tmp11 + tmp12
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp15 = tl.where(tmp8, tmp13, tmp14)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp16 = tl.where(tmp4, tmp7, tmp15)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp18 = tmp16 + tmp17
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp19 = tmp18.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp20 = tl.broadcast_to(tmp19, [XBLOCK, RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean_next, tmp21_m2_next, tmp21_weight_next = triton_helpers.welford_reduce(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             tmp20, tmp21_mean, tmp21_m2, tmp21_weight, roffset == 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean = tl.where(rmask & xmask, tmp21_mean_next, tmp21_mean)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_m2 = tl.where(rmask & xmask, tmp21_m2_next, tmp21_m2)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_weight = tl.where(rmask & xmask, tmp21_weight_next, tmp21_weight)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21_tmp, tmp22_tmp, tmp23_tmp = triton_helpers.welford(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21_mean, tmp21_m2, tmp21_weight, 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp21_tmp[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tmp22_tmp[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = tmp23_tmp[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp22, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp23, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import grid, split_scan_grid, start_graph, end_graph
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/gj/cgjqzvfih3nvjuzburtgf5iivvmq3xsveaesckqtgbu2mj2eltz7.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => convert_element_type, var_mean
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_cat_native_layer_norm_1 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 8],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*fp32', 1: '*fp32', 2: '*fp32', 3: '*fp32', 4: '*fp32', 5: 'i32', 6: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_cat_native_layer_norm_1', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 6
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + (6*x0)), rmask & xmask, other=0.0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tl.where(rmask & xmask, tmp3, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.where(rmask & xmask, tmp4, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.where(rmask & xmask, tmp5, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/o3/co3b7wkosschewuiavh32xtp2ohwffs2q2dkryvo5nwtnzwqnlai.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_5 => add_1, add_2, convert_element_type, convert_element_type_1, mul, mul_1, rsqrt, sub, var_mean
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused_add_cat_native_layer_norm_2 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*fp32', 5: '*fp32', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_cat_native_layer_norm_2', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (x2), xmask).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = x1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0), tmp4 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.full(tmp5.shape, 0.0, tmp5.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tl.where(tmp4, tmp5, tmp6)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tmp0 >= tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.full([1], 197, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tmp0 < tmp9
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + ((196*x0) + (((-1) + x1) % 196)), tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tl.load(in_ptr2 + (x0), tmp8 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tl.where(tmp8, tmp13, tmp14)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tl.where(tmp4, tmp7, tmp15)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp18.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tmp19 - tmp20
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = 768.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp22 / tmp23
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = 1e-06
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = libdevice.rsqrt(tmp26)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tmp21 * tmp27
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tmp28 * tmp30
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tmp32.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp35, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/im/cimro67cis3wub6sql4tqwd5ne3w4pxcwqb23bibsh5ymbad4nr5.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_3 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_3', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/4h/c4hxmv7n26frodhsukhsuxy3wdguvl4i5hopcvtz5gg3aqk3seu6.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_4 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_4', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (768 + x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (768 + x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/jt/cjtlbfuwc7ujpm2yvrqhft6jxorezrp54jze24w4ss4vfkc7koaz.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => _scaled_dot_product_flash_attention
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__scaled_dot_product_flash_attention_5 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[262144], 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__scaled_dot_product_flash_attention_5', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 151296
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex % 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x1 = (xindex // 768)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x2 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1536 + x0 + (2304*x1)), xmask).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (1536 + x0), xmask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/xw/cxwgn3k53ius552jswjurmoadr3ew7ydzckog6ikiou2vznxfmeg.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => abs_1, amax, clamp_max, clamp_min, clamp_min_1, convert_element_type_5, convert_element_type_6, convert_element_type_7, convert_element_type_8, convert_element_type_9, div, div_1, round_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused__to_copy_abs_amax_clamp_div_round_6 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*i8', 2: '*bf16', 3: 'i32', 4: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 4), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_abs_amax_clamp_div_round_6', 'mutated_arg_names': [], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, out_ptr1, out_ptr2, xnumel, rnumel):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl_math.abs(tmp0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.where(rmask & xmask, tmp2, float("-inf"))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp4, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tmp9 / tmp10
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = libdevice.nearbyint(tmp12)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = -127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp14, tmp15)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp16, tmp10)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp18.to(tl.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + (768*x0)), tmp19, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp11, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/ry/cryxjuufeh3su6rah2ncjeqde4hfln3gypfczggzopjfwxgw3huc.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_self_attention => clamp_max, clamp_min, clamp_min_1, convert_element_type_5, convert_element_type_6, convert_element_type_7, convert_element_type_8, convert_element_type_9, div, div_1, fused_int_mm_mul_36, round_1, view_11, view_12
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused__to_copy_clamp_div_mul_round_view_7 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=5,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=8,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*i8', 1: '*i8', 2: '*bf16', 3: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused__to_copy_clamp_div_mul_round_view_7', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(arg_A, arg_B, in_ptr2, out_ptr0):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.int32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 64
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (768*idx_m)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr2 + (tl.broadcast_to(idx_m, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(xindex, mask.shape)), acc * tmp0, mask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import torch._inductor.kernel.mm_common
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] meta0 = {'GROUP_M': 8, 'EVEN_K': True, 'ALLOW_TF32': False, 'ACC_TYPE': 'tl.int32', 'B_PROLOGUE_CAST_TYPE': None, 'BLOCK_M': 32, 'BLOCK_N': 64, 'BLOCK_K': 32}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/gn/cgnd5uhbksm4hi5rfmcl4pa5bjiriyhhzwsjzqzts7xkh5rkynry.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [cat_1, input_1, l__self___encoder_layers_encoder_layer_0_mlp_0, x_7, x_8, y], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.cat, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # cat_1 => cat
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # input_1 => add
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_0 => abs_2, amax_1, clamp_max_1, clamp_min_2, clamp_min_3, convert_element_type_12, convert_element_type_13, convert_element_type_14, convert_element_type_15, convert_element_type_16, div_2, div_3, round_2
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_7 => clone_2
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_8 => add_4
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # y => add_5, add_6, convert_element_type_10, convert_element_type_11, mul_4, mul_5, rsqrt_1, sub_1, var_mean_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused__to_copy_abs_add_amax_cat_clamp_clone_div_native_layer_norm_round_8 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: '*i8', 10: '*bf16', 11: 'i32', 12: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_abs_add_amax_cat_clamp_clone_div_native_layer_norm_round_8', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr4, out_ptr5, xnumel, rnumel):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tl.load(in_ptr5 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp49 = tl.load(in_ptr6 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp52 = tl.load(in_ptr7 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = x0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.full([1], 0, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tmp5 >= tmp6
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tmp5 < tmp8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + (tl.broadcast_to(r1, [RBLOCK])), rmask & tmp9 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tl.full(tmp10.shape, 0.0, tmp10.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tl.where(tmp9, tmp10, tmp11)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp5 >= tmp8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tl.full([1], 197, tl.int64)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tmp5 < tmp14
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tl.load(in_ptr3 + ((196*r1) + (((-1) + x0) % 196)), rmask & tmp13 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.load(in_ptr4 + (tl.broadcast_to(r1, [RBLOCK])), rmask & tmp13 & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.where(tmp13, tmp18, tmp19)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tl.where(tmp9, tmp12, tmp20)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp4 + tmp23
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tl.where(rmask & xmask, tmp26, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = tl.broadcast_to(tmp26, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tl.where(rmask & xmask, tmp29, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = triton_helpers.promote_to_tensor(tl.sum(tmp31, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tl.full([1], 768, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp33.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp32 / tmp34
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp36 = tmp26 - tmp35
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp37 = tmp36 * tmp36
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp38 = tl.broadcast_to(tmp37, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp40 = tl.where(rmask & xmask, tmp38, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp41 = triton_helpers.promote_to_tensor(tl.sum(tmp40, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp42 = tmp25 - tmp35
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp43 = 768.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp44 = tmp41 / tmp43
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp45 = 1e-06
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp46 = tmp44 + tmp45
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp47 = libdevice.rsqrt(tmp46)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp48 = tmp42 * tmp47
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp50 = tmp49.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp51 = tmp48 * tmp50
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp53 = tmp52.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp54 = tmp51 + tmp53
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp55 = tmp54.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp56 = tl_math.abs(tmp55)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp57 = tl.broadcast_to(tmp56, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp59 = tl.where(rmask & xmask, tmp57, float("-inf"))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp60 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp59, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp61 = tmp60.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp62 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp63 = triton_helpers.maximum(tmp61, tmp62)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp64 = tmp63.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp65 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp66 = tmp64 / tmp65
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp67 = tmp55 / tmp66
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp68 = libdevice.nearbyint(tmp67)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp69 = tmp68.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp70 = -127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp71 = triton_helpers.maximum(tmp69, tmp70)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp72 = triton_helpers.minimum(tmp71, tmp65)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp73 = tmp72.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp74 = tmp73.to(tl.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + (768*x0)), tmp24, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr4 + (r1 + (768*x0)), tmp74, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr5 + (x0), tmp66, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/bm/cbm3kely4xtixdjkpajfnj74jn7f5yqq7ly2k2cy7w6pxt6oed5c.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_0 => fused_int_mm_mul_35
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused_mul_9 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=3,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=8,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*i8', 1: '*i8', 2: '*bf16', 3: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused_mul_9', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(arg_A, arg_B, in_ptr2, out_ptr0):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.int32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 64
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 64
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 64
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 3072
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (3072*idx_m)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr2 + (tl.broadcast_to(idx_m, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(xindex, mask.shape)), acc * tmp0, mask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] meta1 = {'GROUP_M': 8, 'EVEN_K': True, 'ALLOW_TF32': False, 'ACC_TYPE': 'tl.int32', 'B_PROLOGUE_CAST_TYPE': None, 'BLOCK_M': 64, 'BLOCK_N': 64, 'BLOCK_K': 64}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/p5/cp5yaskqlgoml7rnsnhjkwniartw27jokkyx6xylzz7c6boavi5t.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_1, l__self___encoder_layers_encoder_layer_0_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_1 => add_8, convert_element_type_17, convert_element_type_18, erf, mul_10, mul_8, mul_9
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_3 => abs_3, amax_2, clamp_max_2, clamp_min_4, clamp_min_5, convert_element_type_19, convert_element_type_20, convert_element_type_21, convert_element_type_22, convert_element_type_23, div_4, div_5, round_3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 4096],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*i8', 4: '*bf16', 5: 'i32', 6: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 6), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 3072
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     _tmp17 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rindex = roffset + rbase
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + (3072*x0)), rmask & xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp3 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp4 = tmp2 + tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp5 = tmp4.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp6 = 0.5
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp7 = tmp5 * tmp6
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp8 = 0.7071067811865476
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp9 = tmp5 * tmp8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp10 = libdevice.erf(tmp9)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp11 = 1.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp12 = tmp10 + tmp11
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp13 = tmp7 * tmp12
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp14 = tmp13.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp15 = tl_math.abs(tmp14)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp16 = tl.broadcast_to(tmp15, [XBLOCK, RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp18 = triton_helpers.maximum(_tmp17, tmp16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         _tmp17 = tl.where(rmask & xmask, tmp18, _tmp17)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = triton_helpers.max2(_tmp17, 1)[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rindex = roffset + rbase
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp19 = tl.load(in_ptr0 + (r1 + (3072*x0)), rmask & xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp20 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp22 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp21 = tmp19 * tmp20
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp23 = tmp21 + tmp22
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp24 = tmp23.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp25 = 0.5
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp26 = tmp24 * tmp25
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp27 = 0.7071067811865476
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp28 = tmp24 * tmp27
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp29 = libdevice.erf(tmp28)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp30 = 1.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp31 = tmp29 + tmp30
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp32 = tmp26 * tmp31
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp33 = tmp32.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp34 = tmp17.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp35 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp36 = triton_helpers.maximum(tmp34, tmp35)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp37 = tmp36.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp38 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp39 = tmp37 / tmp38
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp40 = tmp33 / tmp39
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp41 = libdevice.nearbyint(tmp40)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp42 = tmp41.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp43 = -127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp44 = triton_helpers.maximum(tmp42, tmp43)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp45 = triton_helpers.minimum(tmp44, tmp38)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp46 = tmp45.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tmp47 = tmp46.to(tl.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         tl.store(out_ptr1 + (r1 + (3072*x0)), tmp47, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp48 = tmp17.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp49 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp48, tmp49)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp51 = tmp50.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp52 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp53, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/cr/ccryh5e5ywx5kngc4mmh5qjd3he7ij6j563i2npzhse5yd2mfjkj.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_0_mlp_3 => fused_int_mm_mul_34
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused_mul_11 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=5,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=8,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*i8', 1: '*i8', 2: '*bf16', 3: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused_mul_11', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(arg_A, arg_B, in_ptr2, out_ptr0):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.int32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 64
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 3072
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 3072
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 3072
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (768*idx_m)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr2 + (tl.broadcast_to(idx_m, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(xindex, mask.shape)), acc * tmp0, mask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/24/c24buqr5u7xeh2kjpr4yignaqtni3krvyvvzqxihd3tkqtxcepb2.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [add_2, x_9], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # add_2 => add_10
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_9 => add_11, add_12, convert_element_type_24, convert_element_type_25, mul_13, mul_14, rsqrt_2, sub_2, var_mean_2
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused_add_native_layer_norm_12 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: 'i32', 8: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 8), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_layer_norm_12', 'mutated_arg_names': [], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr2, xnumel, rnumel):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tmp0 + tmp5
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tl.where(rmask & xmask, tmp8, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp8, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tl.where(rmask & xmask, tmp11, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = triton_helpers.promote_to_tensor(tl.sum(tmp13, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = tl.full([1], 768, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tmp14 / tmp16
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp8 - tmp17
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp18 * tmp18
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tl.where(rmask & xmask, tmp20, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = triton_helpers.promote_to_tensor(tl.sum(tmp22, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp7 - tmp17
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = 768.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tmp23 / tmp25
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp27 = 1e-06
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = libdevice.rsqrt(tmp28)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp24 * tmp29
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = tmp30 * tmp32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp36 = tmp33 + tmp35
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp37 = tmp36.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + (768*x0)), tmp37, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/xz/cxzijhf3obhpuedl7uzaextowaoixnrzxxzpxm4ihqkcfkuhaoqp.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [add_2, l__self___encoder_layers_encoder_layer_1_mlp_0, x_11, x_12, y_2], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # add_2 => add_10
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # l__self___encoder_layers_encoder_layer_1_mlp_0 => abs_5, amax_4, clamp_max_4, clamp_min_8, clamp_min_9, convert_element_type_36, convert_element_type_37, convert_element_type_38, convert_element_type_39, convert_element_type_40, div_8, div_9, round_5
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_11 => clone_6
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_12 => add_14
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # y_2 => add_15, add_16, convert_element_type_34, convert_element_type_35, mul_17, mul_18, rsqrt_3, sub_3, var_mean_3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[256, 1024],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: '*i8', 10: '*bf16', 11: 'i32', 12: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr4, out_ptr5, xnumel, rnumel):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 197
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r1 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tl.load(in_ptr3 + (r1 + (768*x0)), rmask & xmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp37 = tl.load(in_ptr6 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp40 = tl.load(in_ptr7 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tmp5 + tmp10
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tmp4 + tmp11
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = tl.where(rmask & xmask, tmp14, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = tl.broadcast_to(tmp14, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tl.where(rmask & xmask, tmp17, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp20 = triton_helpers.promote_to_tensor(tl.sum(tmp19, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp21 = tl.full([1], 768, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp23 = tmp20 / tmp22
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp24 = tmp14 - tmp23
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp25 = tmp24 * tmp24
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp28 = tl.where(rmask & xmask, tmp26, 0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp29 = triton_helpers.promote_to_tensor(tl.sum(tmp28, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp30 = tmp13 - tmp23
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp31 = 768.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp32 = tmp29 / tmp31
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp33 = 1e-06
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp35 = libdevice.rsqrt(tmp34)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp36 = tmp30 * tmp35
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp38 = tmp37.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp39 = tmp36 * tmp38
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp41 = tmp40.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp42 = tmp39 + tmp41
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp43 = tmp42.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp44 = tl_math.abs(tmp43)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp47 = tl.where(rmask & xmask, tmp45, float("-inf"))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp48 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp47, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp49 = tmp48.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp50 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp49, tmp50)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp52 = tmp51.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp53 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp54 = tmp52 / tmp53
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp55 = tmp43 / tmp54
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp56 = libdevice.nearbyint(tmp55)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp57 = tmp56.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp58 = -127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp59 = triton_helpers.maximum(tmp57, tmp58)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp60 = triton_helpers.minimum(tmp59, tmp53)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp61 = tmp60.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp62 = tmp61.to(tl.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + (768*x0)), tmp12, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr4 + (r1 + (768*x0)), tmp62, rmask & xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr5 + (x0), tmp54, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/ci/ccilcmkezfqrpwtj676doylexgnknrp3yeopfxj45wtfeqb5ttat.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_55 => abs_37, amax_36, clamp_max_36, clamp_min_72, clamp_min_73, convert_element_type_290, convert_element_type_291, convert_element_type_292, convert_element_type_293, convert_element_type_294, div_72, div_73, round_37
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_per_fused__to_copy_abs_amax_clamp_div_round_14 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[1, 1024],
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*i8', 2: '*bf16', 3: 'i32', 4: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {3: 1}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 4), equal_to_1=(3,))]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_abs_amax_clamp_div_round_14', 'mutated_arg_names': [], 'no_x_dim': True, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, out_ptr1, out_ptr2, xnumel, rnumel):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rnumel = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     RBLOCK: tl.constexpr = 1024
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     roffset = 0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rmask = rindex < rnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     r0 = rindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), rmask, other=0.0).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl_math.abs(tmp0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tl.where(rmask, tmp2, float("-inf"))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp5 = triton_helpers.promote_to_tensor(triton_helpers.max2(tmp4, 0))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp7 = 1e-05
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp10 = 127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp11 = tmp9 / tmp10
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp13 = libdevice.nearbyint(tmp12)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp15 = -127.0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp14, tmp15)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp16, tmp10)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp19 = tmp18.to(tl.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0, [RBLOCK])), tmp19, rmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr2 + (tl.full([1], 0, tl.int32)), tmp11, None)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/m7/cm7egrifz7kedmmxc3y2ow5uz264q7l27p22m7sjynb65ud7arru.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_55 => clamp_max_36, clamp_min_72, clamp_min_73, convert_element_type_290, convert_element_type_291, convert_element_type_292, convert_element_type_293, convert_element_type_294, div_72, div_73, fused_int_mm_mul, round_37, view_337, view_338
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_poi_fused__to_copy_clamp_div_mul_round_view_15 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.pointwise(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     size_hints=[1024], 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     filename=__file__,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_clamp_div_mul_round_view_15', 'mutated_arg_names': [], 'no_x_dim': False, 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     min_elem_per_thread=0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xnumel = 1000
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xmask = xindex < xnumel
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     x0 = xindex
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0)).to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, xmask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # kernel path: /tmp/torchinductor_cpuhrsch/kc/ckcpducwtgntrm67xjtolc4wedrsfch5oa3nlchtg5jwaforztib.py
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.add, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] # x_55 => add_123, clamp_max_36, clamp_min_72, clamp_min_73, convert_element_type_290, convert_element_type_291, convert_element_type_292, convert_element_type_293, convert_element_type_294, div_72, div_73, fused_int_mm_mul, mul_159, round_37, view_337, view_338
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] triton_tem_fused__to_copy_add_clamp_div_mul_round_view_16 = async_compile.triton('triton_', '''
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] import triton.language as tl
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor import triton_helpers, triton_heuristics
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.ir import ReductionHint, TileHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_helpers import libdevice, math as tl_math
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.triton_heuristics import AutotuneHint
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] from torch._inductor.utils import instance_descriptor
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton_heuristics.template(
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_stages=3,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     num_warps=8,
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     triton_meta={'signature': {0: '*i8', 1: '*i8', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16'}, 'device': 0, 'device_type': 'cuda', 'constants': {}, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_tem_fused__to_copy_add_clamp_div_mul_round_view_16', 'backend_hash': 'bc930fe13620538cae7c5c3cbb39ceccafcf9e855b622ca7b30587ae30424ddb'},
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] @triton.jit
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def triton_(arg_A, arg_B, in_ptr2, in_ptr3, in_ptr4, out_ptr1):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     GROUP_M : tl.constexpr = 8
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     EVEN_K : tl.constexpr = True
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ALLOW_TF32 : tl.constexpr = False
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ACC_TYPE : tl.constexpr = tl.int32
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B_PROLOGUE_CAST_TYPE : tl.constexpr = None
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_M : tl.constexpr = 16
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_N : tl.constexpr = 128
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     BLOCK_K : tl.constexpr = 128
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = arg_A
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = arg_B
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     M = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     N = 1000
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     K = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     if M * N == 0:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # early exit due to zero-size input(s)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         return
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_am = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_ak = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bk = 1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     stride_bn = 768
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # based on triton.ops.matmul
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid = tl.program_id(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_m = (M + BLOCK_M - 1) // BLOCK_M
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     grid_n = (N + BLOCK_N - 1) // BLOCK_N
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # re-order program ID for better L2 performance
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     width = GROUP_M * grid_n
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_id = pid // width
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     group_size = min(grid_m - group_id * GROUP_M, GROUP_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_m = group_id * GROUP_M + (pid % group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     pid_n = (pid % width) // (group_size)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     ram = tl.max_contiguous(tl.multiple_of(rm % M, BLOCK_M), BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rbn = tl.max_contiguous(tl.multiple_of(rn % N, BLOCK_N), BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rk = tl.arange(0, BLOCK_K)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     A = A + (ram[:, None] * stride_am + rk[None, :] * stride_ak)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     B = B + (rk[:, None] * stride_bk + rbn[None, :] * stride_bn)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     acc = tl.zeros((BLOCK_M, BLOCK_N), dtype=ACC_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     for k in range(K, 0, -BLOCK_K):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if EVEN_K:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         else:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             a = tl.load(A, mask=rk[None, :] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = tl.load(B, mask=rk[:, None] < k, other=0.)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         if B_PROLOGUE_CAST_TYPE is not None:
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]             b = b.to(B_PROLOGUE_CAST_TYPE)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         acc += tl.dot(a, b, allow_tf32=ALLOW_TF32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         A += BLOCK_K * stride_ak
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         B += BLOCK_K * stride_bk
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # rematerialize rm and rn to save registers
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rm = pid_m * BLOCK_M + tl.arange(0, BLOCK_M)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     rn = pid_n * BLOCK_N + tl.arange(0, BLOCK_N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_m = rm[:, None]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     idx_n = rn[None, :]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     mask = (idx_m < M) & (idx_n < N)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     # inductor generates a suffix
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     xindex = idx_n + (1000*idx_m)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp0 = tl.load(in_ptr2 + (tl.broadcast_to(idx_n, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp1 = tl.load(in_ptr3 + (tl.broadcast_to(xindex, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp3 = tl.load(in_ptr4 + (tl.broadcast_to(xindex, mask.shape)), mask, eviction_policy='evict_last').to(tl.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp2 = acc * tmp0 * tmp1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(xindex, mask.shape)), tmp4, mask)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] ''', device_str='cuda')
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] meta2 = {'GROUP_M': 8, 'EVEN_K': True, 'ALLOW_TF32': False, 'ACC_TYPE': 'tl.int32', 'B_PROLOGUE_CAST_TYPE': None, 'BLOCK_M': 16, 'BLOCK_N': 128, 'BLOCK_K': 128}
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] async_compile.wait(globals())
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] del async_compile
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def call(args):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1 = args
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     args.clear()
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg0_1, (1, 1, 768), (768, 768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 197, 768), (151296, 768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg2_1, (768, 3, 16, 16), (768, 256, 16, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg3_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg4_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg5_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg6_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg7_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg8_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg9_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg10_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg11_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg12_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg13_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg14_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg15_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg16_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg17_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg18_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg19_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg20_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg21_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg22_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg23_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg24_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg25_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg26_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg27_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg28_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg29_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg30_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg31_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg32_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg33_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg34_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg35_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg36_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg37_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg38_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg39_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg40_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg41_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg42_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg43_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg44_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg45_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg46_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg47_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg48_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg49_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg50_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg51_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg52_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg53_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg54_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg55_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg56_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg57_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg58_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg59_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg60_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg61_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg62_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg63_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg64_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg65_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg66_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg67_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg68_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg69_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg70_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg71_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg72_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg73_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg74_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg75_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg76_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg77_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg78_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg79_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg80_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg81_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg82_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg83_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg84_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg85_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg86_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg87_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg88_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg89_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg90_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg91_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg92_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg93_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg94_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg95_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg96_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg97_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg98_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg99_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg100_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg101_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg102_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg103_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg104_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg105_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg106_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg107_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg108_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg109_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg110_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg111_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg112_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg113_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg114_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg115_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg116_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg117_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg118_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg119_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg120_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg121_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg122_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg123_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg124_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg125_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg126_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg127_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg128_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg129_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg130_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg131_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg132_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg133_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg134_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg135_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg136_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg137_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg138_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg139_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg140_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg141_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg142_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg143_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg144_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg145_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg146_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg147_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg148_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg149_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg150_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg151_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg152_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg153_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg154_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg155_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg156_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg157_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg158_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg159_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg160_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg161_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg162_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg163_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg164_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg165_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg166_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg167_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg168_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg169_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg170_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg171_1, (2304, 768), (768, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg172_1, (2304, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg173_1, (768, 768), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg174_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg175_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg176_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg177_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg178_1, (768, 3072), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg179_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg180_1, (3072, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg181_1, (3072, 768), (1, 3072))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg182_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg183_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg184_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg185_1, (768, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg186_1, (768, 1000), (1, 768))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg187_1, (1000, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg188_1, (1000, ), (1, ))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     assert_size_stride(arg189_1, (1, 3, 224, 224), (150528, 50176, 224, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         torch.cuda.set_device(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x], Original ATen: [aten.convolution]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf0 = extern_kernels.convolution(arg189_1, arg2_1, stride=(16, 16), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         assert_size_stride(buf0, (1, 768, 14, 14), (150528, 196, 14, 1))
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg189_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg2_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf1 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 197, 1, 6), (1182, 6, 1182, 1), torch.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused_add_cat_native_layer_norm_0.run(arg0_1, buf0, arg3_1, arg1_1, buf1, buf2, buf3, 1182, 128, grid=grid(1182), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 197, 1), (197, 1, 197), torch.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf5 = empty_strided_cuda((1, 197, 1), (197, 1, 197), torch.float32)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_cat_native_layer_norm_1.run(buf1, buf2, buf3, buf4, buf5, 197, 6, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf2
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf3
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf8 = empty_strided_cuda((1, 197, 768), (151296, 768, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, x_5], Original ATen: [aten.add, aten.cat, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused_add_cat_native_layer_norm_2.run(arg0_1, buf0, arg3_1, arg1_1, buf4, buf5, arg4_1, arg5_1, buf8, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg4_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg5_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf4
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf5
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf9 = empty_strided_cuda((197, 2304), (2304, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (197, 768), (768, 1), 0), reinterpret_tensor(arg6_1, (768, 2304), (1, 768), 0), out=buf9)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg6_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf8, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf8  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf9, arg7_1, buf10, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf11 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf9, arg7_1, buf11, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf12 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf9, arg7_1, buf12, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg7_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf13 = aten._scaled_dot_product_flash_attention.default(buf10, buf11, buf12, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf14 = buf13[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf13
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf20 = empty_strided_cuda((197, 768), (768, 1), torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf21 = empty_strided_cuda((197, 1), (1, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf14, buf20, buf21, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf22 = reinterpret_tensor(buf14, (197, 768), (768, 1), 0); del buf14  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf20, arg8_1, buf21, buf22, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg8_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf23 = reinterpret_tensor(buf22, (1, 197, 768), (151296, 768, 1), 0); del buf22  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf29 = reinterpret_tensor(buf20, (1, 197, 768), (151296, 768, 1), 0); del buf20  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf30 = reinterpret_tensor(buf21, (1, 197, 1), (197, 1, 1), 0); del buf21  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [cat_1, input_1, l__self___encoder_layers_encoder_layer_0_mlp_0, x_7, x_8, y], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.cat, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_cat_clamp_clone_div_native_layer_norm_round_8.run(buf23, arg9_1, arg10_1, arg0_1, buf0, arg3_1, arg1_1, arg11_1, arg12_1, buf29, buf30, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg0_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg10_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg11_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg12_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg1_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg3_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg9_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf0
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf31 = empty_strided_cuda((197, 3072), (3072, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf29, arg13_1, buf30, buf31, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg13_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf33 = empty_strided_cuda((1, 197, 3072), (605184, 3072, 1), torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf34 = buf30; del buf30  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_1, l__self___encoder_layers_encoder_layer_0_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf31, arg14_1, arg15_1, buf33, buf34, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg14_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg15_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf35 = reinterpret_tensor(buf12, (197, 768), (768, 1), 0); del buf12  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_0_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf33, arg16_1, buf34, buf35, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg16_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf39 = reinterpret_tensor(buf11, (1, 197, 768), (151296, 768, 1), 0); del buf11  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_2, x_9], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf23, buf35, arg17_1, arg18_1, arg19_1, arg20_1, buf39, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg19_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg20_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf40 = buf9; del buf9  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf39, (197, 768), (768, 1), 0), reinterpret_tensor(arg21_1, (768, 2304), (1, 768), 0), out=buf40)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg21_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf41 = reinterpret_tensor(buf39, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf39  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf40, arg22_1, buf41, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf42 = buf10; del buf10  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf40, arg22_1, buf42, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf43 = empty_strided_cuda((1, 12, 197, 64), (151296, 64, 768, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf40, arg22_1, buf43, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg22_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf44 = aten._scaled_dot_product_flash_attention.default(buf41, buf42, buf43, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf41
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf45 = buf44[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf44
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf51 = reinterpret_tensor(buf29, (197, 768), (768, 1), 0); del buf29  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf52 = reinterpret_tensor(buf34, (197, 1), (1, 1), 0); del buf34  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf45, buf51, buf52, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf53 = reinterpret_tensor(buf45, (197, 768), (768, 1), 0); del buf45  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf51, arg23_1, buf52, buf53, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg23_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf54 = reinterpret_tensor(buf53, (1, 197, 768), (151296, 768, 1), 0); del buf53  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf60 = reinterpret_tensor(buf51, (1, 197, 768), (151296, 768, 1), 0); del buf51  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf61 = reinterpret_tensor(buf52, (1, 197, 1), (197, 1, 1), 0); del buf52  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_2, l__self___encoder_layers_encoder_layer_1_mlp_0, x_11, x_12, y_2], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf54, arg24_1, arg25_1, buf23, buf35, arg17_1, arg18_1, arg26_1, arg27_1, buf60, buf61, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg17_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg18_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg24_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg25_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg26_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg27_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf62 = buf31; del buf31  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf60, arg28_1, buf61, buf62, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg28_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf64 = buf33; del buf33  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf65 = buf61; del buf61  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_mlp_1, l__self___encoder_layers_encoder_layer_1_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf62, arg29_1, arg30_1, buf64, buf65, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg29_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg30_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf66 = buf35; del buf35  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_1_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf64, arg31_1, buf65, buf66, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg31_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf70 = buf23; del buf23  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_4, x_13], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf54, buf66, arg32_1, arg33_1, arg34_1, arg35_1, buf70, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg34_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg35_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf71 = buf40; del buf40  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf70, (197, 768), (768, 1), 0), reinterpret_tensor(arg36_1, (768, 2304), (1, 768), 0), out=buf71)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg36_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf72 = reinterpret_tensor(buf70, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf70  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf71, arg37_1, buf72, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf73 = buf43; del buf43  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf71, arg37_1, buf73, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf74 = buf42; del buf42  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf71, arg37_1, buf74, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg37_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf75 = aten._scaled_dot_product_flash_attention.default(buf72, buf73, buf74, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf72
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf76 = buf75[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf75
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf82 = reinterpret_tensor(buf60, (197, 768), (768, 1), 0); del buf60  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf83 = reinterpret_tensor(buf65, (197, 1), (1, 1), 0); del buf65  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf76, buf82, buf83, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf84 = reinterpret_tensor(buf76, (197, 768), (768, 1), 0); del buf76  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf82, arg38_1, buf83, buf84, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg38_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf85 = reinterpret_tensor(buf84, (1, 197, 768), (151296, 768, 1), 0); del buf84  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf91 = reinterpret_tensor(buf82, (1, 197, 768), (151296, 768, 1), 0); del buf82  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf92 = reinterpret_tensor(buf83, (1, 197, 1), (197, 1, 1), 0); del buf83  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_4, l__self___encoder_layers_encoder_layer_2_mlp_0, x_15, x_16, y_4], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf85, arg39_1, arg40_1, buf54, buf66, arg32_1, arg33_1, arg41_1, arg42_1, buf91, buf92, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg32_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg33_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg39_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg40_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg41_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg42_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf93 = buf62; del buf62  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf91, arg43_1, buf92, buf93, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg43_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf95 = buf64; del buf64  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf96 = buf92; del buf92  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_mlp_1, l__self___encoder_layers_encoder_layer_2_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf93, arg44_1, arg45_1, buf95, buf96, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg44_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg45_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf97 = buf66; del buf66  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_2_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf95, arg46_1, buf96, buf97, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg46_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf101 = buf54; del buf54  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_6, x_17], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf85, buf97, arg47_1, arg48_1, arg49_1, arg50_1, buf101, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg49_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg50_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf102 = buf71; del buf71  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf101, (197, 768), (768, 1), 0), reinterpret_tensor(arg51_1, (768, 2304), (1, 768), 0), out=buf102)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg51_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf103 = reinterpret_tensor(buf101, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf101  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf102, arg52_1, buf103, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf104 = buf74; del buf74  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf102, arg52_1, buf104, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf105 = buf73; del buf73  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf102, arg52_1, buf105, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg52_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf106 = aten._scaled_dot_product_flash_attention.default(buf103, buf104, buf105, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf103
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf107 = buf106[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf106
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf113 = reinterpret_tensor(buf91, (197, 768), (768, 1), 0); del buf91  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf114 = reinterpret_tensor(buf96, (197, 1), (1, 1), 0); del buf96  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf107, buf113, buf114, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf115 = reinterpret_tensor(buf107, (197, 768), (768, 1), 0); del buf107  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf113, arg53_1, buf114, buf115, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg53_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf116 = reinterpret_tensor(buf115, (1, 197, 768), (151296, 768, 1), 0); del buf115  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf122 = reinterpret_tensor(buf113, (1, 197, 768), (151296, 768, 1), 0); del buf113  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf123 = reinterpret_tensor(buf114, (1, 197, 1), (197, 1, 1), 0); del buf114  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_6, l__self___encoder_layers_encoder_layer_3_mlp_0, x_19, x_20, y_6], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf116, arg54_1, arg55_1, buf85, buf97, arg47_1, arg48_1, arg56_1, arg57_1, buf122, buf123, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg47_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg48_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg54_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg55_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg56_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg57_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf124 = buf93; del buf93  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf122, arg58_1, buf123, buf124, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg58_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf126 = buf95; del buf95  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf127 = buf123; del buf123  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_mlp_1, l__self___encoder_layers_encoder_layer_3_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf124, arg59_1, arg60_1, buf126, buf127, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg59_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg60_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf128 = buf97; del buf97  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_3_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf126, arg61_1, buf127, buf128, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg61_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf132 = buf85; del buf85  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_8, x_21], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf116, buf128, arg62_1, arg63_1, arg64_1, arg65_1, buf132, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg64_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg65_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf133 = buf102; del buf102  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf132, (197, 768), (768, 1), 0), reinterpret_tensor(arg66_1, (768, 2304), (1, 768), 0), out=buf133)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg66_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf134 = reinterpret_tensor(buf132, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf132  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf133, arg67_1, buf134, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf135 = buf105; del buf105  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf133, arg67_1, buf135, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf136 = buf104; del buf104  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf133, arg67_1, buf136, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg67_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf137 = aten._scaled_dot_product_flash_attention.default(buf134, buf135, buf136, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf134
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf138 = buf137[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf137
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf144 = reinterpret_tensor(buf122, (197, 768), (768, 1), 0); del buf122  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf145 = reinterpret_tensor(buf127, (197, 1), (1, 1), 0); del buf127  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf138, buf144, buf145, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf146 = reinterpret_tensor(buf138, (197, 768), (768, 1), 0); del buf138  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf144, arg68_1, buf145, buf146, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg68_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf147 = reinterpret_tensor(buf146, (1, 197, 768), (151296, 768, 1), 0); del buf146  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf153 = reinterpret_tensor(buf144, (1, 197, 768), (151296, 768, 1), 0); del buf144  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf154 = reinterpret_tensor(buf145, (1, 197, 1), (197, 1, 1), 0); del buf145  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_8, l__self___encoder_layers_encoder_layer_4_mlp_0, x_23, x_24, y_8], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf147, arg69_1, arg70_1, buf116, buf128, arg62_1, arg63_1, arg71_1, arg72_1, buf153, buf154, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg62_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg63_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg69_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg70_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg71_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg72_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf155 = buf124; del buf124  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf153, arg73_1, buf154, buf155, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg73_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf157 = buf126; del buf126  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf158 = buf154; del buf154  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_mlp_1, l__self___encoder_layers_encoder_layer_4_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf155, arg74_1, arg75_1, buf157, buf158, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg74_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg75_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf159 = buf128; del buf128  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_4_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf157, arg76_1, buf158, buf159, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg76_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf163 = buf116; del buf116  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_10, x_25], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf147, buf159, arg77_1, arg78_1, arg79_1, arg80_1, buf163, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg79_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg80_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf164 = buf133; del buf133  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf163, (197, 768), (768, 1), 0), reinterpret_tensor(arg81_1, (768, 2304), (1, 768), 0), out=buf164)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg81_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf165 = reinterpret_tensor(buf163, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf163  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf164, arg82_1, buf165, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf166 = buf136; del buf136  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf164, arg82_1, buf166, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf167 = buf135; del buf135  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf164, arg82_1, buf167, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg82_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf168 = aten._scaled_dot_product_flash_attention.default(buf165, buf166, buf167, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf165
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf169 = buf168[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf168
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf175 = reinterpret_tensor(buf153, (197, 768), (768, 1), 0); del buf153  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf176 = reinterpret_tensor(buf158, (197, 1), (1, 1), 0); del buf158  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf169, buf175, buf176, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf177 = reinterpret_tensor(buf169, (197, 768), (768, 1), 0); del buf169  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf175, arg83_1, buf176, buf177, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg83_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf178 = reinterpret_tensor(buf177, (1, 197, 768), (151296, 768, 1), 0); del buf177  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf184 = reinterpret_tensor(buf175, (1, 197, 768), (151296, 768, 1), 0); del buf175  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf185 = reinterpret_tensor(buf176, (1, 197, 1), (197, 1, 1), 0); del buf176  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_10, l__self___encoder_layers_encoder_layer_5_mlp_0, x_27, x_28, y_10], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf178, arg84_1, arg85_1, buf147, buf159, arg77_1, arg78_1, arg86_1, arg87_1, buf184, buf185, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg77_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg78_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg84_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg85_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg86_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg87_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf186 = buf155; del buf155  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf184, arg88_1, buf185, buf186, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg88_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf188 = buf157; del buf157  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf189 = buf185; del buf185  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_mlp_1, l__self___encoder_layers_encoder_layer_5_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf186, arg89_1, arg90_1, buf188, buf189, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg89_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg90_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf190 = buf159; del buf159  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_5_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf188, arg91_1, buf189, buf190, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg91_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf194 = buf147; del buf147  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_12, x_29], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf178, buf190, arg92_1, arg93_1, arg94_1, arg95_1, buf194, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg94_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg95_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf195 = buf164; del buf164  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf194, (197, 768), (768, 1), 0), reinterpret_tensor(arg96_1, (768, 2304), (1, 768), 0), out=buf195)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg96_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf196 = reinterpret_tensor(buf194, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf194  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf195, arg97_1, buf196, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf197 = buf167; del buf167  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf195, arg97_1, buf197, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf198 = buf166; del buf166  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf195, arg97_1, buf198, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg97_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf199 = aten._scaled_dot_product_flash_attention.default(buf196, buf197, buf198, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf196
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf200 = buf199[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf199
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf206 = reinterpret_tensor(buf184, (197, 768), (768, 1), 0); del buf184  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf207 = reinterpret_tensor(buf189, (197, 1), (1, 1), 0); del buf189  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf200, buf206, buf207, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf208 = reinterpret_tensor(buf200, (197, 768), (768, 1), 0); del buf200  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf206, arg98_1, buf207, buf208, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg98_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf209 = reinterpret_tensor(buf208, (1, 197, 768), (151296, 768, 1), 0); del buf208  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf215 = reinterpret_tensor(buf206, (1, 197, 768), (151296, 768, 1), 0); del buf206  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf216 = reinterpret_tensor(buf207, (1, 197, 1), (197, 1, 1), 0); del buf207  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_12, l__self___encoder_layers_encoder_layer_6_mlp_0, x_31, x_32, y_12], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf209, arg99_1, arg100_1, buf178, buf190, arg92_1, arg93_1, arg101_1, arg102_1, buf215, buf216, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg100_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg101_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg102_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg92_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg93_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg99_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf217 = buf186; del buf186  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf215, arg103_1, buf216, buf217, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg103_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf219 = buf188; del buf188  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf220 = buf216; del buf216  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_mlp_1, l__self___encoder_layers_encoder_layer_6_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf217, arg104_1, arg105_1, buf219, buf220, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg104_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg105_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf221 = buf190; del buf190  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_6_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf219, arg106_1, buf220, buf221, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg106_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf225 = buf178; del buf178  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_14, x_33], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf209, buf221, arg107_1, arg108_1, arg109_1, arg110_1, buf225, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg109_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg110_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf226 = buf195; del buf195  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf225, (197, 768), (768, 1), 0), reinterpret_tensor(arg111_1, (768, 2304), (1, 768), 0), out=buf226)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg111_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf227 = reinterpret_tensor(buf225, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf225  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf226, arg112_1, buf227, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf228 = buf198; del buf198  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf226, arg112_1, buf228, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf229 = buf197; del buf197  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf226, arg112_1, buf229, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg112_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf230 = aten._scaled_dot_product_flash_attention.default(buf227, buf228, buf229, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf227
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf231 = buf230[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf230
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf237 = reinterpret_tensor(buf215, (197, 768), (768, 1), 0); del buf215  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf238 = reinterpret_tensor(buf220, (197, 1), (1, 1), 0); del buf220  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf231, buf237, buf238, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf239 = reinterpret_tensor(buf231, (197, 768), (768, 1), 0); del buf231  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf237, arg113_1, buf238, buf239, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg113_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf240 = reinterpret_tensor(buf239, (1, 197, 768), (151296, 768, 1), 0); del buf239  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf246 = reinterpret_tensor(buf237, (1, 197, 768), (151296, 768, 1), 0); del buf237  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf247 = reinterpret_tensor(buf238, (1, 197, 1), (197, 1, 1), 0); del buf238  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_14, l__self___encoder_layers_encoder_layer_7_mlp_0, x_35, x_36, y_14], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf240, arg114_1, arg115_1, buf209, buf221, arg107_1, arg108_1, arg116_1, arg117_1, buf246, buf247, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg107_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg108_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg114_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg115_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg116_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg117_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf248 = buf217; del buf217  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf246, arg118_1, buf247, buf248, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg118_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf250 = buf219; del buf219  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf251 = buf247; del buf247  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_mlp_1, l__self___encoder_layers_encoder_layer_7_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf248, arg119_1, arg120_1, buf250, buf251, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg119_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg120_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf252 = buf221; del buf221  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_7_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf250, arg121_1, buf251, buf252, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg121_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf256 = buf209; del buf209  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_16, x_37], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf240, buf252, arg122_1, arg123_1, arg124_1, arg125_1, buf256, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg124_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg125_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf257 = buf226; del buf226  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf256, (197, 768), (768, 1), 0), reinterpret_tensor(arg126_1, (768, 2304), (1, 768), 0), out=buf257)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg126_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf258 = reinterpret_tensor(buf256, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf256  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf257, arg127_1, buf258, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf259 = buf229; del buf229  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf257, arg127_1, buf259, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf260 = buf228; del buf228  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf257, arg127_1, buf260, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg127_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf261 = aten._scaled_dot_product_flash_attention.default(buf258, buf259, buf260, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf258
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf262 = buf261[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf261
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf268 = reinterpret_tensor(buf246, (197, 768), (768, 1), 0); del buf246  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf269 = reinterpret_tensor(buf251, (197, 1), (1, 1), 0); del buf251  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf262, buf268, buf269, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf270 = reinterpret_tensor(buf262, (197, 768), (768, 1), 0); del buf262  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf268, arg128_1, buf269, buf270, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg128_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf271 = reinterpret_tensor(buf270, (1, 197, 768), (151296, 768, 1), 0); del buf270  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf277 = reinterpret_tensor(buf268, (1, 197, 768), (151296, 768, 1), 0); del buf268  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf278 = reinterpret_tensor(buf269, (1, 197, 1), (197, 1, 1), 0); del buf269  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_16, l__self___encoder_layers_encoder_layer_8_mlp_0, x_39, x_40, y_16], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf271, arg129_1, arg130_1, buf240, buf252, arg122_1, arg123_1, arg131_1, arg132_1, buf277, buf278, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg122_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg123_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg129_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg130_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg131_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg132_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf279 = buf248; del buf248  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf277, arg133_1, buf278, buf279, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg133_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf281 = buf250; del buf250  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf282 = buf278; del buf278  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_mlp_1, l__self___encoder_layers_encoder_layer_8_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf279, arg134_1, arg135_1, buf281, buf282, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg134_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg135_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf283 = buf252; del buf252  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_8_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf281, arg136_1, buf282, buf283, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg136_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf287 = buf240; del buf240  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_18, x_41], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf271, buf283, arg137_1, arg138_1, arg139_1, arg140_1, buf287, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg139_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg140_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf288 = buf257; del buf257  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf287, (197, 768), (768, 1), 0), reinterpret_tensor(arg141_1, (768, 2304), (1, 768), 0), out=buf288)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg141_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf289 = reinterpret_tensor(buf287, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf287  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf288, arg142_1, buf289, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf290 = buf260; del buf260  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf288, arg142_1, buf290, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf291 = buf259; del buf259  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf288, arg142_1, buf291, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg142_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf292 = aten._scaled_dot_product_flash_attention.default(buf289, buf290, buf291, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf289
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf293 = buf292[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf292
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf299 = reinterpret_tensor(buf277, (197, 768), (768, 1), 0); del buf277  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf300 = reinterpret_tensor(buf282, (197, 1), (1, 1), 0); del buf282  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf293, buf299, buf300, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf301 = reinterpret_tensor(buf293, (197, 768), (768, 1), 0); del buf293  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf299, arg143_1, buf300, buf301, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg143_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf302 = reinterpret_tensor(buf301, (1, 197, 768), (151296, 768, 1), 0); del buf301  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf308 = reinterpret_tensor(buf299, (1, 197, 768), (151296, 768, 1), 0); del buf299  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf309 = reinterpret_tensor(buf300, (1, 197, 1), (197, 1, 1), 0); del buf300  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_18, l__self___encoder_layers_encoder_layer_9_mlp_0, x_43, x_44, y_18], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf302, arg144_1, arg145_1, buf271, buf283, arg137_1, arg138_1, arg146_1, arg147_1, buf308, buf309, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg137_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg138_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg144_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg145_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg146_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg147_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf310 = buf279; del buf279  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf308, arg148_1, buf309, buf310, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg148_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf312 = buf281; del buf281  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf313 = buf309; del buf309  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_mlp_1, l__self___encoder_layers_encoder_layer_9_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf310, arg149_1, arg150_1, buf312, buf313, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg149_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg150_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf314 = buf283; del buf283  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_9_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf312, arg151_1, buf313, buf314, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg151_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf318 = buf271; del buf271  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_20, x_45], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf302, buf314, arg152_1, arg153_1, arg154_1, arg155_1, buf318, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg154_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg155_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf319 = buf288; del buf288  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf318, (197, 768), (768, 1), 0), reinterpret_tensor(arg156_1, (768, 2304), (1, 768), 0), out=buf319)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg156_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf320 = reinterpret_tensor(buf318, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf318  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf319, arg157_1, buf320, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf321 = buf291; del buf291  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf319, arg157_1, buf321, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf322 = buf290; del buf290  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf319, arg157_1, buf322, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg157_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf323 = aten._scaled_dot_product_flash_attention.default(buf320, buf321, buf322, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf320
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf324 = buf323[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf323
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf330 = reinterpret_tensor(buf308, (197, 768), (768, 1), 0); del buf308  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf331 = reinterpret_tensor(buf313, (197, 1), (1, 1), 0); del buf313  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf324, buf330, buf331, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf332 = reinterpret_tensor(buf324, (197, 768), (768, 1), 0); del buf324  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf330, arg158_1, buf331, buf332, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg158_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf333 = reinterpret_tensor(buf332, (1, 197, 768), (151296, 768, 1), 0); del buf332  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf339 = reinterpret_tensor(buf330, (1, 197, 768), (151296, 768, 1), 0); del buf330  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf340 = reinterpret_tensor(buf331, (1, 197, 1), (197, 1, 1), 0); del buf331  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_20, l__self___encoder_layers_encoder_layer_10_mlp_0, x_47, x_48, y_20], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf333, arg159_1, arg160_1, buf302, buf314, arg152_1, arg153_1, arg161_1, arg162_1, buf339, buf340, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg152_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg153_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg159_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg160_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg161_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg162_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf341 = buf310; del buf310  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf339, arg163_1, buf340, buf341, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg163_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf343 = buf312; del buf312  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf344 = buf340; del buf340  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_mlp_1, l__self___encoder_layers_encoder_layer_10_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf341, arg164_1, arg165_1, buf343, buf344, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg164_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg165_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf345 = buf314; del buf314  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_10_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf343, arg166_1, buf344, buf345, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg166_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf349 = buf302; del buf302  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_22, x_49], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf333, buf345, arg167_1, arg168_1, arg169_1, arg170_1, buf349, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg169_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg170_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf350 = buf319; del buf319  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [], Original ATen: []
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf349, (197, 768), (768, 1), 0), reinterpret_tensor(arg171_1, (768, 2304), (1, 768), 0), out=buf350)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg171_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf351 = reinterpret_tensor(buf349, (1, 12, 197, 64), (151296, 64, 768, 1), 0); del buf349  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_3.run(buf350, arg172_1, buf351, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf352 = buf322; del buf322  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_4.run(buf350, arg172_1, buf352, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf353 = buf321; del buf321  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__scaled_dot_product_flash_attention_5.run(buf350, arg172_1, buf353, 151296, grid=grid(151296), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg172_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf350
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._scaled_dot_product_flash_attention]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf354 = aten._scaled_dot_product_flash_attention.default(buf351, buf352, buf353, scale=0.125)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf351
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf352
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf353
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf355 = buf354[0]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf354
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf361 = reinterpret_tensor(buf339, (197, 768), (768, 1), 0); del buf339  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf362 = reinterpret_tensor(buf344, (197, 1), (1, 1), 0); del buf344  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_6.run(buf355, buf361, buf362, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf363 = reinterpret_tensor(buf355, (197, 768), (768, 1), 0); del buf355  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_self_attention], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_clamp_div_mul_round_view_7.run(buf361, arg173_1, buf362, buf363, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg173_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf364 = reinterpret_tensor(buf363, (1, 197, 768), (151296, 768, 1), 0); del buf363  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf370 = reinterpret_tensor(buf361, (1, 197, 768), (151296, 768, 1), 0); del buf361  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf371 = reinterpret_tensor(buf362, (1, 197, 1), (197, 1, 1), 0); del buf362  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_22, l__self___encoder_layers_encoder_layer_11_mlp_0, x_51, x_52, y_22], Original ATen: [aten._to_copy, aten.abs, aten.add, aten.amax, aten.clamp, aten.clone, aten.div, aten.native_layer_norm, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_add_amax_clamp_clone_div_native_layer_norm_round_13.run(buf364, arg174_1, arg175_1, buf333, buf345, arg167_1, arg168_1, arg176_1, arg177_1, buf370, buf371, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg167_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg168_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg174_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg175_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg176_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg177_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf372 = buf341; del buf341  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_mlp_0], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_9.run(buf370, arg178_1, buf371, buf372, grid=torch._inductor.kernel.mm_common.mm_grid(197, 3072, meta1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg178_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf370
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf374 = buf343; del buf343  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf375 = buf371; del buf371  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_mlp_1, l__self___encoder_layers_encoder_layer_11_mlp_3], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.gelu, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_red_fused__to_copy_abs_amax_clamp_div_gelu_round_10.run(buf372, arg179_1, arg180_1, buf374, buf375, 197, 3072, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg179_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg180_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf372
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf376 = buf345; del buf345  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [l__self___encoder_layers_encoder_layer_11_mlp_3], Original ATen: [aten.mul]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused_mul_11.run(buf374, arg181_1, buf375, buf376, grid=torch._inductor.kernel.mm_common.mm_grid(197, 768, meta0), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg181_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf374
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf375
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf380 = buf333; del buf333  # reuse
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [add_24, x_53], Original ATen: [aten.add, aten.native_layer_norm]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused_add_native_layer_norm_12.run(buf364, buf376, arg182_1, arg183_1, arg184_1, arg185_1, buf380, 197, 768, grid=grid(197), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg182_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg183_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg184_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg185_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf364
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf376
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf382 = empty_strided_cuda((1, 768), (768, 1), torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf383 = empty_strided_cuda((1, 1), (1, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.abs, aten.amax, aten.clamp, aten.div, aten.round]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_per_fused__to_copy_abs_amax_clamp_div_round_14.run(buf380, buf382, buf383, 1, 768, grid=grid(1), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf380
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf384 = empty_strided_cuda((1, 1000), (1000, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_poi_fused__to_copy_clamp_div_mul_round_view_15.run(buf383, buf384, 1000, grid=grid(1000), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf383
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         buf386 = empty_strided_cuda((1, 1000), (1000, 1), torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         # Source Nodes: [x_55], Original ATen: [aten._to_copy, aten.add, aten.clamp, aten.div, aten.mul, aten.round, aten.view]
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         triton_tem_fused__to_copy_add_clamp_div_mul_round_view_16.run(buf382, arg186_1, buf384, arg187_1, arg188_1, buf386, grid=torch._inductor.kernel.mm_common.mm_grid(1, 1000, meta2), stream=stream0)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg186_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg187_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del arg188_1
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf382
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]         del buf384
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     return (buf386, )
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg0_1 = rand_strided((1, 1, 768), (768, 768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg1_1 = rand_strided((1, 197, 768), (151296, 768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg2_1 = rand_strided((768, 3, 16, 16), (768, 256, 16, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg3_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg4_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg5_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg6_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg7_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg8_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg9_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg10_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg11_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg12_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg13_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg14_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg15_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg16_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg17_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg18_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg19_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg20_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg21_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg22_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg23_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg24_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg25_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg26_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg27_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg28_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg29_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg30_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg31_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg32_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg33_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg34_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg35_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg36_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg37_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg38_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg39_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg40_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg41_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg42_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg43_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg44_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg45_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg46_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg47_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg48_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg49_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg50_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg51_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg52_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg53_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg54_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg55_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg56_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg57_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg58_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg59_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg60_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg61_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg62_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg63_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg64_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg65_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg66_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg67_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg68_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg69_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg70_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg71_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg72_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg73_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg74_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg75_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg76_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg77_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg78_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg79_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg80_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg81_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg82_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg83_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg84_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg85_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg86_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg87_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg88_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg89_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg90_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg91_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg92_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg93_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg94_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg95_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg96_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg97_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg98_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg99_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg100_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg101_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg102_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg103_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg104_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg105_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg106_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg107_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg108_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg109_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg110_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg111_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg112_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg113_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg114_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg115_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg116_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg117_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg118_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg119_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg120_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg121_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg122_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg123_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg124_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg125_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg126_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg127_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg128_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg129_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg130_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg131_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg132_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg133_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg134_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg135_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg136_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg137_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg138_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg139_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg140_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg141_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg142_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg143_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg144_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg145_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg146_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg147_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg148_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg149_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg150_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg151_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg152_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg153_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg154_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg155_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg156_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg157_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg158_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg159_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg160_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg161_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg162_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg163_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg164_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg165_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg166_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg167_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg168_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg169_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg170_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg171_1 = rand_strided((2304, 768), (768, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg172_1 = rand_strided((2304, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg173_1 = rand_strided((768, 768), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg174_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg175_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg176_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg177_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg178_1 = rand_strided((768, 3072), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg179_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg180_1 = rand_strided((3072, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg181_1 = rand_strided((3072, 768), (1, 3072), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg182_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg183_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg184_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg185_1 = rand_strided((768, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg186_1 = rand_strided((768, 1000), (1, 768), device='cuda:0', dtype=torch.int8)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg187_1 = rand_strided((1000, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg188_1 = rand_strided((1000, ), (1, ), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     arg189_1 = rand_strided((1, 3, 224, 224), (150528, 50176, 224, 1), device='cuda:0', dtype=torch.bfloat16)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1])
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] if __name__ == "__main__":
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0318 20:04:23.150000 139828954601280 torch/_inductor/graph.py:1267] [0/0] [__output_code] 
I0318 20:04:23.151000 139828954601280 torch/_inductor/graph.py:1273] [0/0] [__output_code] Output code written to: /tmp/torchinductor_cpuhrsch/ef/cefgmc2ijeluj75jyb35ehcrl624vemzldu2qmzbywxru6tpa2zg.py
STAGE:2024-03-18 20:04:23 1967512:1967512 ActivityProfilerController.cpp:314] Completed Stage: Warm Up
STAGE:2024-03-18 20:04:23 1967512:1967512 ActivityProfilerController.cpp:320] Completed Stage: Collection
STAGE:2024-03-18 20:04:23 1967512:1967512 ActivityProfilerController.cpp:324] Completed Stage: Post Processing
